set hlsearch    " highlight search
set incsearch   " Incremental search, search as you type
set ignorecase  " Ignore case when searching
set smartcase   " Ignore case when searching lowercase
set ai          " auto indent
set smartindent
set nowrap
set nocp

" Colors **********************************************************************
set t_Co=256         " 256 colors
set background=dark
syntax on            " syntax highlighting
colorscheme ir_black
set gfn=Droid\ Sans\ Mono\ 8

" Mouse ***********************************************************************
set mouse=a " Enable the mouse
behave xterm
"set selectmode=mouse

" Misc settings ***************************************************************
set backspace=indent,eol,start
set number                     " Show line numbers
set matchpairs+=<:>
set vb t_vb=                   " Turn off bell, this could be more annoying, but I'm not sure how
set nofoldenable               " Turn off folding

" Omni Completion *************************************************************
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

filetype plugin indent on

" remove trailing whitespace with f5
:nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

" Directories *****************************************************************
" Setup backup location and enable
set backupdir=~/.backup/vim
set backup

" bubble single lines of text
nmap <C-Up> ddkP
nmap <C-Down> ddp
" bubble multiple lines of text
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" vimzen coding
let g:user_zen_settings = {
  \  'php' : {
  \    'extends' : 'html',
  \    'filters' : 'c',
  \  },
  \  'xml' : {
  \    'extends' : 'html',
  \  },
  \  'haml' : {
  \    'extends' : 'html',
  \  },
  \  'erb' : {
  \   'extends' : 'html',
  \ },
  \}
let g:user_zen_expandabbr_key = '<c-e>'
let g:use_zen_complete_tag = 1

" clean formatting for css thanks @andrewhawthorne
map <C-F12> :%s/\(^[^ ].*,\)[ ]*\(.*[^;]\)\+/\1\r\2/g<CR><C-F12>
map <F12> :%s/^[ \t]*//g<CR>:%s/{/{\r/g<CR>:%s/^\(.*\)[ ]*{\(.*\)}/\1{\r\2\r}/ge<CR>:%s/^\(.*;\)/\1/g<CR>:%s/;[ ]*/;\r/g<CR>:%s/[\n]\+/\r/g<CR>:%s/[\n]\+$//g<CR>:%s/}/}\r/g<CR>:%s/[ ]\+/ /g<CR>:%s/[ ]*{/ {/g<CR>:%s/[ ]\+$//ge<CR>:%s/^$//ge<CR>Gddgg=G:%s/^\(\s\+.\+\):[ ]*\(.*[^}]\)/\1: \2/g<CR><C-F12>gg
" sort css attributes
map <A-F12> :%s/[ ]\+$//ge<CR>:let _srch=search('{','W')<CR>viB:sort<CR>:if _srch == 0<CR>:echoerr "Sort reached bottom"<CR><ESC>:endif<CR><C-C><A-F12>
